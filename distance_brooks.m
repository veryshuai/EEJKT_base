function [D,W,error] = distance_brooks(X)
% This function takes a set of parameters and returns the distance between
% the moments in the data and the moments generated by the parameter set.

rng(80085,'twister');
seed_crand(80085);

format long;

X = [  0.48016   3.40227  -4.12674  -3.46893   6.39528   0.46312   4.93144...
 21.46708   1.22671  22.22450   0.02000   4.37299   1.73986  -6.01789];
% 
% X = [9.01727   0.67172  -6.11632  -4.14387  12.41229   0.49052   5.47756...
%     21.06456   0.79063  22.30770   0.82780   5.51383   1.70948   3.20688];
%  fit metrics (weighted and unweighted): 13.1724215259,0.337708349605

% X = [8.92437   0.89440  -6.02254  -4.39379  12.38096   0.47668   5.33958...
%      21.04564   0.79111  22.29483   0.85993   5.50773   1.73639   2.72989];
%  fit metrics (weighted and unweighted): 13.5660844298,0.228084930687  
  
% X = [-2.41546   1.02613  -5.79373  -4.24490  13.04104   0.74816   6.49638...
%       21.21599   1.35692  21.98747   1.15592   5.98436   1.75621   3.45142];
%   fit metrics (weighted and unweighted): 13.8491163348,0.149653203726

%   X = [-1.20840   1.02613  -5.72867  -4.53928   5.54641   0.74894   7.62375...
%        21.35784   1.62456   16.62236     0.8   8.99467   1.86725   7.21314];   

% X = [-1.40840   1.02613  -5.72867  -5.23928  13.04641   0.74894   7.62375...
%      21.35784   1.62456  22.62236   1.34582   5.99467   1.86725   4.71314];
% 
%  X = [-0.21511   2.82741  -3.05628  -3.56830   6.33444   0.46105   5.06004...
%      21.48065   0.88943     22.32608  -0.01328   5.23599   1.70917   2.01067];

%   fit metric 	12.35179994	0.143223473 MSM II 8-2-19
% X = [-1.03031   2.89027  -5.12946  -2.47455   5.33444   0.49230   4.93504...		
%  22.35565   1.01084  22.20206  -0.03835   4.36099   1.77167  -6.83011];		
		
%  fit metric 	11.82573067	0.185277783  MSM II 8-2-19
% X =[-0.20406   3.82463  -3.87864  -2.67954   6.36398   0.46209   4.93879...		
%     22.59595   1.01596  22.20576  -0.05045   4.25217   1.71491  -6.83075];		

%  fit metric 	14.23887927	0.477596019	MSM Brooks 8-2-19			
% X =[-3.92138 1.02613 -6.27095 -1.18856 54.00535 0.37666  8.62375...
%     15.23521 4.45231 16.62236  1.8     -6.90346 2.86725 -4.03152];
% 
% X =[-3.92138 1.02613 -6.27095 -1.18856 4.00535 0.37666  8.62375...
%     15.23521 4.45231 16.62236  1.0     -6.90346 2.86725 -4.03152];
												
%  fit metric 	15.00942358	0.380462412	MSM Brooks 8-2-19			
% X =[-1.2084  1.02613 -5.27095 0.72618 60.3618 0.74894 7.62375...
%      4.86166 4.45231 96.69027 0.8     3.51736 1.86725 7.21314];


% relation between parameters and the X vector:

% scale_h    =  X(3);       % log of home profit function scalar       
% F_h        =  exp(X(1));  % home match fixed cost
% F_f        =  exp(X(14)); % foreign match fixed cost
% delta      =  X(2);       % exogenous match death hazard (per year)         
% scale_f    =  X(3)+X(4);  % log of foreign profit function scalar       
% beta       =  1/(X(5)-1); % cost function convexity parameter               
% ah         =  X(7)*X(6);  %X(6) is mean of beta dist ah / (ah + bh)
% bh         =  X(7)*(1-X(6)); %X(7) is (ah + bh)
% L_z        =  X(8);       % buyer shock jump hazard            
% D_z        =  X(9);       % buyer shock jump size            
% L_b        =  X(10);      % shipment hazard            
% gam        =  X(11);      % network effect
% cs         =  exp(X(12)); % cost function scalar          
% sig_p      =  X(13);      % std. dev. of log productivity shock

try
    
% dbstop if warning    
tic;
X2params;
SetParams;
inten_sim_v1;
time1 = toc;

tic2 = tic;
% discrete_sim_v1;
discrete_sim_parfor3;
time2 = toc(tic2);

fprintf('\r\n inten_sim run time:    %.2f\n', time1); 
fprintf(' discrete_sim run time: %.2f\n', time2);


%% Targets and weights

[Data, W] = target_stats_brooks();

%  Data = [cohort_aggsDAT',match_drateDAT',degree_distDAT',match_ar1_coefsDAT,mavshipDAT,exp_dom_coefsDAT,...
%     dom_ar1_coefsDAT,ln_haz_coefsDAT,succ_rate_coefsDAT,sr_var_coefsDAT,for_sales_shrDAT,exp_fracDAT];
% 
% W = blkdiag(cohort_aggsCOV,match_drateCOV,degree_distCOV,match_ar1_coefsCOV,mavshipCOV,exp_dom_coefsCOV,dom_ar1_coefsCOV,...
%     ln_haz_coefsCOV,succ_rate_coefsCOV,sr_var_coefsCOV,for_sales_shrCOV,exp_fracCOV);

%% Realizations

[bexit,brooks,model_share] = match_summary_v3(agg_mat_yr_sales,agg_match_count,mm);

 
    cohort_aggsSIM = [brooks(3:11,1)./brooks(2,1);brooks(3:11,2)./brooks(2,2);brooks(3:11,3)./brooks(2,3)];  
    match_drateSIM = reshape(bexit,size(bexit,1)*4,1);
    degree_distSIM = model_share; 
   
    match_ar1_coefsSIM   = [ybar_match;beta_match(2:4);mse_match_ar1]; % [mean ln Xf(ijt), ln Xf(ijt-1), R(ijt-1), ln(exporter age)]   
    mavshipSIM           = [avg_ln_ships]; % average ln(# shipments) 
    exp_dom_coefsSIM     = [ybar_hfsales;beta_hfsales(2);mse_hf]; % [mean dep var.,coef,MSE]  
    dom_ar1_coefsSIM     = [ybar_fsales_h;beta_fsales_h(2);mse_h]; % [mean dep var.,coef,MSE] 
    ln_haz_coefsSIM      = [mean_ln_haz]; % [mean dep. var]          
    succ_rate_coefsSIM   = [mean_succ_rate;b_succ_rate(2)]; % [mean succ rate, ln(1+meetings)]
    sr_var_coefsSIM      = [mean_usq_succ;b_usq_succ(2)]; % [mean dep. var, ln(1+meetings)]
    for_sales_shrSIM     = [avg_expt_rate]; % mean share of exports to U.S. in total sales 
    exp_fracSIM          = [share_exptr]; % fraction of firms exporting to U.S.  

 Model = cat(1,cohort_aggsSIM,match_drateSIM,degree_distSIM,match_ar1_coefsSIM,...
    mavshipSIM,exp_dom_coefsSIM,dom_ar1_coefsSIM,ln_haz_coefsSIM,...   
    succ_rate_coefsSIM,sr_var_coefsSIM,for_sales_shrSIM,exp_fracSIM);   


error = Data'-Model;

     

% D = (error'/W)*error;
W_D = log((error'/W)*error);
Old_D = norm(error)/norm(Data');
D = Old_D;
nanflag = isnan(D); 

if nanflag>0
        D = D * 10; 
end

%     punishment
%     D = D*(1+punishment);
    
%     mmm = cat(2,Data',Model)
%     X %print out current parameter guess
%     D

%%  Create Diagnostics

%  Data = [cohort_aggsDAT',match_drateDAT',degree_distDAT',match_ar1_coefsDAT,mavshipDAT,exp_dom_coefsDAT,...
%         dom_ar1_coefsDAT,ln_haz_coefsDAT,succ_rate_coefsDAT,sr_var_coefsDAT,for_sales_shrDAT,exp_fracDAT];
        
    inv_W = W^-1;
%   err_comp = @(sta,fin) error(sta:fin)' * inv_W(sta:fin,sta:fin) * error(sta:fin);
    err_comp = @(sta,fin) norm(error(sta:fin))/norm(Data');
    cohort_aggs_coefs_err = err_comp(1,27);
    match_drate_coefs_err = err_comp(28,47);
    degree_dist_coefs_err = err_comp(48,54);
    match_ar1_coefs_err   = err_comp(55,59);
    mavg_ship_coef_err    = err_comp(60,60);
    exp_dom_err           = err_comp(61,63);
    dom_ar1_err           = err_comp(64,66);
    ln_haz_coef_err       = err_comp(67,67);
    succ_rate_coef_err    = err_comp(68,69);
    sr_var_coef_err       = err_comp(70,71);
    for_sales_shr_err     = err_comp(72,72);
    exp_frac_err          = err_comp(73,73);
                   
    fprintf('\r\n weighted metric:   %.15f\n', W_D); 
        
    %Simple unweighted loss

    fprintf(' unweighted metric: %.15f\n', Old_D); 
    
   fprintf('\r\n params = ');
   fprintf('\r%8.5f %8.5f %8.5f %8.5f %8.5f %8.5f %8.5f',X(1:7));
   fprintf('\r%8.5f %8.5f %8.5f %8.5f %8.5f %8.5f %8.5f',X(8:14));
   fprintf( '\r\n  ');   
    
        
%%  data/model comparison  
    mmm = cat(2,Data',Model);  
    
    max_clients = size(ff_sim_max,1);
    nfirm_per_yr = agg_nfirm/(mm.tot_yrs - mm.burn);
    nexpr_per_yr = agg_nexptr/(mm.tot_yrs - mm.burn);
    
    format shortG
    fprintf('\r\n moments: ');
    cat(2,mmm(1:10,:),mmm(11:20,:),mmm(21:30,:),[mmm(31:40,:)])
    cat(2,mmm(41:50,:),mmm(51:60,:),mmm(61:70,:),[mmm(71:73,:);zeros(7,2)])
    format long
    
%     fprintf('\r\n moments: ');   
%     fprintf('\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(1:10,:)));  
%     fprintf('\r\n  ');
%     fprintf('\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(11:20,:)));  
%     fprintf('\r\n  ');
%     fprintf('\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(21:30,:)));  
%     fprintf('\r\n  ');
%     fprintf('\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(31:38,:)));  
%     fprintf( '\r\n  ');   

    format short
    fprintf('\r\n Fit diagnostics: ');  
    fprintf('\r\n cohort aggs        = %.3f\n',cohort_aggs_coefs_err);
    fprintf(' match_death rates  = %.3f\n',match_drate_coefs_err);
    fprintf(' degree_dist_fit    = %.3f\n',degree_dist_coefs_err);    
    fprintf(' match_ar1_coefs    = %.3f\n',match_ar1_coefs_err);
    fprintf(' av_shipments       = %.3f\n',mavg_ship_coef_err);
    fprintf(' exp_dom            = %.3f\n',exp_dom_err);
    fprintf(' dom_ar1            = %.3f\n',dom_ar1_err);
    fprintf(' mean log hazard    = %.3f\n',ln_haz_coef_err);
    fprintf(' succ_rate_coef     = %.3f\n',succ_rate_coef_err);
    fprintf(' sr_var_coef        = %.3f\n',sr_var_coef_err);
    fprintf(' for_sales_shr_coef = %.3f\n',for_sales_shr_err);
    fprintf(' exp_frac_coef      = %.3f\n',exp_frac_err);
    
    fprintf('\r\n number of exporters per yr = %.3f\n',nexpr_per_yr);
    fprintf(' maximum number of clients  = %.3f\n',max_clients);
    fprintf(' number of firms per yr     = %.3f\n',nfirm_per_yr);
    fprintf( '\r\n  '); 
    
%%   write results to text files
      fitvec = [W_D Old_D];
      fileID2 = fopen('results/ga_fitlog.txt','a');
      fprintf(fileID2,'\r\n fit metric = ');
      dlmwrite('results/ga_fitlog.txt',fitvec,'-append','precision',12);
      fclose(fileID2);
 

      fileID1 = fopen('results/ga_running_output.txt','a');
      fprintf(fileID1,'\r\n fit metrics (weighted and unweighted): ');
      dlmwrite('results/ga_running_output.txt',fitvec,'-append','precision',12);
    
      fprintf(fileID1, '\r\n parameters: ');
      fprintf(fileID1, '\r\n%9.5f %9.5f %9.5f %9.5f %9.5f %9.5f %9.5f',X(1:7));
      fprintf(fileID1, '\r\n%9.5f %9.5f %9.5f %9.5f %9.5f %9.5f %9.5f',X(8:14));
      fprintf(fileID1, '\r\n  ');
  
      fprintf(fileID1, '\r\n moments: ');   
      fprintf(fileID1, '\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(1:10,:)));  
      fprintf(fileID1, '\r\n  ');
      fprintf(fileID1, '\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(11:20,:)));  
      fprintf(fileID1, '\r\n  ');
      fprintf(fileID1, '\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(21:30,:)));  
      fprintf(fileID1, '\r\n  ');
      fprintf(fileID1, '\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(31:40,:)));   
      fprintf(fileID1, '\r\n  '); 
       fprintf(fileID1, '\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(41:50,:)));   
      fprintf(fileID1, '\r\n  ');  
      fprintf(fileID1, '\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(51:60,:)));   
      fprintf(fileID1, '\r\n  ');  
      fprintf(fileID1, '\r\n%6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f',full(mmm(61:70,:)));   
      fprintf(fileID1, '\r\n  ');  
      fprintf(fileID1, '\r\n%6.3f %6.3f %6.3f ',full(mmm(71:73,:)));   
     fprintf(fileID1, '\r\n  ');  
      fclose(fileID1);
%%    
 plots
 summary_tables_v2 
 estimate_summary
%  
% sortmat = sortrows(agg_mat_yr_sales,[2 3 1]); 
% sortmat(:,1) = floor(sortmat(:,1)./mm.pd_per_yr);
% agg_mat_yr_sales: [t,type,firm ID, match sales, shipments, boy Z, eoy Z, w/in yr. match age, firm age] 
catch err
        % report error
%         getReport(err, 'extended')
%         load('badX','XX')
%         XX = [XX;X];
%         save('badX','XX')
%         % If broken for any reason, return high loss
        D = 1e12;
        W = 1; 
        error = 1;
end %end try/catch
   
end
